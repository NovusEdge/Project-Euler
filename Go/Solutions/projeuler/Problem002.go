package euler

import (
	"fmt"
	"time"
)

/*
Problem002 answers the problem at : https://projecteuler.net/problem=2

* Problem 2:

	Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

		1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

	By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/
func Problem002() {
	ans, i, start := 0, 0, time.Now()
	k := _evenfibb(i)

	for k < 4000000 {
		ans += _evenfibb(i)
		i++
		k = _evenfibb(i)
	}

	end := time.Now()

	fmt.Printf("\nAnswer to Problem 3 : %d\n", ans)
	fmt.Printf("Time Taken: %f seconds\n\n", end.Sub(start).Seconds())
}

func _evenfibb(n int) int {
	a, b := 0, 1
	for i := 1; i < n; i++ {
		a += b
		a, b = b, a
	}
	if a%2 == 0 {
		return a
	}
	return 0
}
