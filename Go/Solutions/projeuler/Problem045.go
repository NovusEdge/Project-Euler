package euler

import (
	"fmt"
	"time"
)

/*
Problem045 answers the problem at : https://projecteuler.net/problem=39

* Problem 45:

Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

	Triangle		T(n)=n(n+1)/2		1, 3, 6, 10, 15, ...

	Pentagonal		P(n)=n(3n−1)/2		1, 5, 12, 22, 35, ...

	Hexagonal		H(n)=n(2n−1)		1, 6, 15, 28, 45, ...

It can be verified that T(285) = P(165) = H(143) = 40755.

**Find the next triangle number that is also pentagonal and hexagonal.**
*/
func Problem045() {

	start := time.Now()
	TNums := []int64{}
	PNums := []int64{}
	HNums := []int64{}

	for i := 143; i < 100000; i++ {
		TNums = append(TNums, tNum(int64(i)))
		PNums = append(PNums, hNum(int64(i)))
		HNums = append(HNums, pNum(int64(i)))
	}

	common := []int64{}
	for _, i := range TNums {
		pres, _ := binarySearch(PNums, i)
		hres, _ := binarySearch(HNums, i)
		if pres > 0 && hres > 0 {
			common = append(common, i)
		}
	}

	ans, _ := binarySearch(common, 40755)
	ans = int(common[ans+1])

	end := time.Now()
	fmt.Printf("\nAnswer to Problem 39 : %d\n", ans)
	fmt.Printf("Time Taken: %f seconds\n\n", end.Sub(start).Seconds())
}
